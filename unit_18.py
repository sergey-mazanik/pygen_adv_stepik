# """ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ """
# with open(input(), encoding='utf-8') as file:
#     input_lines = [line.strip() for line in file.readlines()]
#     print(len(input_lines))


# """ –°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å """
# with open('ledger.txt', encoding='utf-8') as file:
#     lines = [int(line.strip()[1::]) for line in file.readlines()]
#     print(f'${sum(lines)}')


# """ Goooood students """
#
#
# def compare_mark(marks: list):
#     flag = False
#     for mark in marks:
#         if int(mark) > 64:
#             flag = True
#         else:
#             flag = False
#             break
#     return flag
#
#
# with open('grades.txt', encoding='utf-8') as file:
#     lines = [line.strip().split() for line in file.readlines()]
#     count = 0
#     for line in lines:
#         if compare_mark(line[1::]):
#             count += 1
#     print(count)


# """ –°–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Ñ–∞–π–ª–µ """
# with open('words.txt', encoding='utf-8') as file:
#     data = file.read().split()
#     max_len = 0
#     for i in data:
#         if len(i) > max_len:
#             max_len = len(i)
#     for i in data:
#         if len(i) == max_len:
#             print(i)


# """ Tail of a File """
# with open(input(), encoding='utf-8') as file:
#     lines = [line.strip() for line in file.readlines()]
#     print(*lines[-10:], sep='\n')


# """ Forbidden words üå∂Ô∏è """
# with open('forbidden_words.txt', encoding='utf-8') as file:
#     forbidden_words = file.read().split()
#
# with open(input(), encoding='utf-8') as file:
#     line = file.read()
#     double_line = line.lower()
#     for forbidden_word in forbidden_words:
#         if forbidden_word in double_line:
#             double_line = double_line.replace(forbidden_word, len(forbidden_word) * '*')
#     for i in range(len(double_line)):
#         if double_line[i] == '*':
#             print('*', end='')
#         else:
#             print(line[i], end='')


# """ –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è üå∂Ô∏è """
# translate_dict = {
#     '–∞': 'a', '–∫': 'k', '—Ö': 'h', '–±': 'b', '–ª': 'l', '—Ü': 'c', '–≤': 'v', '–º': 'm', '—á': 'ch',
#     '–≥': 'g', '–Ω': 'n', '—à': 'sh', '–¥': 'd', '–æ': 'o', '—â': 'shh', '–µ': 'e', '–ø': 'p', '—ä': '*',
#     '—ë': 'jo', '—Ä': 'r', '—ã': 'y', '–∂': 'zh', '—Å': 's', '—å': "'", '–∑': 'z', '—Ç': 't', '—ç': 'je',
#     '–∏': 'i', '—É': 'u', '—é': 'ju', '–π': 'j', '—Ñ': 'f', '—è': 'ya',
#     '–ê': 'A', '–ö': 'K', '–•': 'H', '–ë': 'B', '–õ': 'L', '–¶': 'C', '–í': 'V', '–ú': 'M', '–ß': 'Ch',
#     '–ì': 'G', '–ù': 'N', '–®': 'Sh', '–î': 'D', '–û': 'O', '–©': 'Shh', '–ï': 'E', '–ü': 'P', '–™': '*',
#     '–Å': 'Jo', '–†': 'R', '–´': 'Y', '–ñ': 'Zh', '–°': 'S', '–¨': "'", '–ó': 'Z', '–¢': 'T', '–≠': 'Je',
#     '–ò': 'I', '–£': 'U', '–Æ': 'Ju', '–ô': 'J', '–§': 'F', '–Ø': 'Ya',
#     }
#
# with open('cyrillic.txt', encoding='utf-8') as file, open('transliteration.txt', 'a', encoding='utf-8') as output_file:
#     line = file.read()
#     new_line = ''
#     for char in line:
#         if char in translate_dict.keys():
#             char = char.replace(char, translate_dict[char])
#             new_line += char
#         else:
#             new_line += char
#     print(new_line, file=output_file)


# """ –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç—ã üå∂Ô∏è """
# with open(input(), encoding='utf-8') as file:
#     lines = [line.strip() for line in file.readlines()]
#     new_lines = []
#     for i in range(len(lines)):
#         if lines[i].startswith('#') and lines[i + 1].startswith('def'):
#             continue
#         elif lines[i][:3] == 'def' and not lines[i - 1].startswith('#'):
#             index = lines[i].index('(')
#             new_lines.append(lines[i][4:index])
#     if len(new_lines) == 0:
#         print('Best Programming Team')
#     else:
#         print(*new_lines, sep='\n')
